/* Import a beautiful font for the title */
@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@600;700&display=swap');

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* Import a beautiful font for the title */
/* @import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@600;700&display=swap'); */

body, html {
  height: 100%;
  width: 100%;
}

#root {
  width: 100%;
  height: 100vh;
  background-color: white;
}

.app-container {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-color: white;
  padding: 20px;
}

.app-title {
  font-family: 'Courier New', monospace;
  font-weight: 900;
  font-size: 60px;
  color: #000;
  margin-bottom: 10px;
  margin-top: -80px; /* Adjust this value to move the title up or down */
  text-align: center;
  letter-spacing: 2px;
  text-transform: uppercase;
  position: relative;
  width: 100%;
}

.app-subtitle {
  font-family: 'Courier New', monospace;
  font-size: 24px;
  font-weight: 600;
  color: #444;
  margin-top: 20px;
  margin-bottom: 80px;
  text-align: center;
  width: 100%;
  line-height: 1.4;
}

.block-info {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-bottom: 20px;
}

.block-number {
  font-family: 'Courier New', monospace;
  font-size: 24px;
  color: #333;
  margin-bottom: 10px;
}

.block-size-label {
  font-family: 'Courier New', monospace;
  font-size: 16px;
  color: #888;
  margin-bottom: 5px;
}

.time-remaining {
  font-family: 'Courier New', monospace;
  font-size: 16px;
  color: #555;
  margin-top: 5px;
  margin-bottom: 10px;
  padding: 5px 10px;
  border-radius: 4px;
  background-color: #f5f5f5;
}

.block-container {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  max-width: 700px;
  perspective: 1000px; /* Add perspective for 3D effect */
  margin-bottom: 40px;
}

/* 3D Cube styling */
.block {
  position: relative;
  width: 300px;
  height: 300px;
  transform-style: preserve-3d;
  transform: rotateX(15deg) rotateY(-15deg);
  transition: all 0.5s ease;
  cursor: grab;
  backface-visibility: hidden;
}

.block:active {
  cursor: grabbing;
}

/* Remove floating animation when cube is spinnable */
.block.spinnable {
  animation: none;
}

/* Bottom face - make it look solid */
.face-bottom {
  transform: rotateX(-90deg) translateZ(150px);
  /* border-radius: 10px; <-- REMOVED */
  /* Use a slightly opaque, cool grey for the bottom */
  background: linear-gradient(
    to top,
    rgba(210, 215, 220, 0.8) 0%,
    rgba(230, 235, 240, 0.7) 100%
  );
  box-shadow: 
    inset 0 5px 15px rgba(0, 0, 0, 0.15), /* Inner shadow from top */
    inset 0 0 40px rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(200, 205, 210, 0.8);
}

/* Fix water sides to perfectly align with the cube */
.water-front, .water-back, .water-left, .water-right {
  position: absolute;
  bottom: 0;
  width: 300px;
  background: linear-gradient(
    to bottom,
    rgba(80, 240, 230, 0.95) 0%,     
    rgba(24, 218, 236, 0.95) 35%,    
    rgba(30, 170, 186, 1) 70%,       
    rgba(0, 150, 150, 1) 100%        
  );
  box-shadow: 
    inset 0 1px 8px rgba(0, 0, 0, 0.2),
    inset 0 0 40px rgba(255, 255, 255, 0.15);
  opacity: 0.95;
  filter: brightness(1.1);
  /* Use smooth ease-in-out transition for height */
  transition: height 0.8s ease-in-out;
  /* Remove bottom border, keep left/right */
  border-width: 0 1px 0 1px;
  border-style: solid;
  border-color: rgba(255, 255, 255, 0.3);
}

/* Water top face (surface) - synchronized smooth transition */
.water-top {
  position: absolute;
  width: 299px; /* Slightly smaller to fit inside without z-fighting */
  background: linear-gradient(
    135deg,
    rgba(80, 240, 230, 0.95) 0%,     
    rgba(24, 218, 236, 0.95) 100%    
  );
  box-shadow: 
    inset 0 0 15px rgba(255, 255, 255, 0.5),
    inset 0 0 40px rgba(255, 255, 255, 0.15);
  opacity: 0.96;
  filter: brightness(1.1);
  transform-origin: center center;
  /* Synchronized smooth transition for transform */
  transition: transform 0.8s ease-in-out, opacity 0.5s ease-out;
  /* border-radius: 10px; <-- REMOVED */
  border: 1px solid rgba(255, 255, 255, 0.3);
  left: 0.5px; /* Center it */
  z-index: 5; /* Ensure it's visible from the top */
  height: 300px;
}

/* Block number and capacity label should remain fixed during rotation */
.capacity-label, .capacity-label-no-fill,
.block-number-link {
  pointer-events: none;
}

/* Remove hover effects since we're making it spinnable */
.block:hover {
  transform: rotateX(15deg) rotateY(-15deg); /* Reset to default */
}

/* Add instruction overlay */
.spin-instruction {
  position: absolute;
  bottom: -40px;
  left: 50%;
  transform: translateX(-50%);
  font-family: 'Courier New', monospace;
  font-size: 14px;
  color: #666;
  white-space: nowrap;
  opacity: 0;
  transition: opacity 0.3s;
  pointer-events: none;
}

.block-container:hover .spin-instruction {
  opacity: 1;
}

/* Cube face styling - subtle border for definition */
.block-face {
  position: absolute;
  width: 300px;
  height: 300px;
  backface-visibility: hidden;
  background-color: rgba(240, 240, 240, 0.3);
  /* Subtle border for edge definition */
  border: 1px solid rgba(200, 205, 210, 0.4);
  box-shadow: 
    0 4px 15px rgba(0, 0, 0, 0.05),
    inset 0 0 40px rgba(255, 255, 255, 0.2),
    inset 0 1px 5px rgba(255, 255, 255, 0.8);
  backdrop-filter: blur(2px);
  background: linear-gradient(
    135deg,
    rgba(255, 255, 255, 0.3) 0%,
    rgba(255, 255, 255, 0.1) 50%,
    rgba(230, 230, 230, 0.2) 100%
  );
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  /* border-radius: 10px; <-- REMOVED */
}

/* Front face */
.face-front {
  transform: translateZ(150px);
  /* border-radius: 10px; <-- REMOVED */
}

/* Back face */
.face-back {
  transform: rotateY(180deg) translateZ(150px);
  /* border-radius: 10px; <-- REMOVED */
}

/* Left face */
.face-left {
  transform: rotateY(-90deg) translateZ(150px);
  /* border-radius: 10px; <-- REMOVED */
}

/* Right face */
.face-right {
  transform: rotateY(90deg) translateZ(150px);
  /* border-radius: 10px; <-- REMOVED */
}

/* Top face */
.face-top {
  transform: rotateX(90deg) translateZ(150px);
  /* border-radius: 10px; <-- REMOVED */
}

/* Bottom face */
.face-bottom {
  transform: rotateX(-90deg) translateZ(150px);
  /* border-radius: 10px; <-- REMOVED */
}

/* Water inside the 3D cube - adjust to match exact cube dimensions */
.block-fill-3d {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 300px;
  height: 300px;
  transform-style: preserve-3d;
  backface-visibility: hidden;
  z-index: 2;
  pointer-events: none; /* Prevent water from interfering with drag */
}

/* Fixed positioning for water sides - removed border-radius */
.water-front {
  transform: translateZ(149px);
  /* border-radius: 0 0 10px 10px; <-- REMOVED */
  width: 299px; /* Adjusted width to prevent gaps */
  left: 0.5px;
}

.water-back {
  transform: rotateY(180deg) translateZ(149px);
  /* border-radius: 0 0 10px 10px; <-- REMOVED */
  width: 299px;
  left: 0.5px;
}

.water-left {
  transform: rotateY(-90deg) translateZ(149px);
  /* border-radius: 0 0 10px 10px; <-- REMOVED */
  width: 299px;
  left: 0.5px;
}

.water-right {
  transform: rotateY(90deg) translateZ(149px);
  /* border-radius: 0 0 10px 10px; <-- REMOVED */
  width: 299px;
  left: 0.5px;
}

/* Block number and capacity label adjustment */
.capacity-label, .capacity-label-no-fill {
  position: absolute;
  bottom: 5px;
  left: 0;
  width: 100%;
  text-align: center;
  font-size: 16px;
  font-weight: bold;
  z-index: 20;
  transform: translateZ(150px);
  color: white;
  text-shadow: 0px 0px 3px rgba(0, 0, 0, 0.7);
}

.capacity-label-no-fill {
  color: #333;
  text-shadow: none;
}

.block-number-link {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) translateZ(150px);
  font-family: 'Courier New', monospace;
  font-size: 24px;
  color: #333;
  text-decoration: none;
  z-index: 20;
  transition: all 0.3s ease;
  cursor: pointer;
  text-shadow: 0px 0px 4px rgba(255, 255, 255, 0.8);
}

/* Add highlight to block edges for better visibility */
.block-face::after {
  /* content: ''; */ /* Highlight REMOVED */
  /* position: absolute; */
  /* inset: 0; */
  /* border: 1px solid rgba(255, 255, 255, 0.4); */
  /* border-radius: 10px; */ /* Already removed earlier */
  /* pointer-events: none; */
}

/* Water wave and ripple effects for cube */
.wave-container-3d {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  border-radius: 0 0 10px 10px;
  pointer-events: none;
  mix-blend-mode: soft-light;
}

/* Water surface effects */
.water-surface-3d {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 15px;
  background: linear-gradient(
    to bottom,
    rgba(240, 255, 254, 0.9) 0%,
    rgba(200, 255, 250, 0.2) 100%
  );
  border-radius: 2px 2px 0 0;
  filter: blur(1px);
  animation: surface-move 8s infinite ease-in-out;
  opacity: 0.8;
  z-index: 10;
}

/* Special pulse effect for cube sides */
.pulse .water-front, 
.pulse .water-back, 
.pulse .water-left, 
.pulse .water-right {
  animation: water-side-pulse 1s ease-in-out;
}

/* Special pulse effect ONLY for water top (brightness) */
.pulse .water-top {
  animation: water-top-pulse 1s ease-in-out;
}

/* Modified pulse for sides - removed scale, only brightness */
@keyframes water-side-pulse {
  0% {
    filter: brightness(1.1);
  }
  50% {
    filter: brightness(1.3);
  }
  100% {
    filter: brightness(1.1);
  }
}

/* New pulse for top - only brightness */
@keyframes water-top-pulse {
  0% {
    filter: brightness(1.1);
  }
  50% {
    filter: brightness(1.3);
  }
  100% {
    filter: brightness(1.1);
  }
}

/* Remove the old combined pulse animation */
/* 
@keyframes water-pulse { ... old animation ... } 
*/

.temp-capacity-controls + .block-container .water-front,
.temp-capacity-controls + .block-container .water-back,
.temp-capacity-controls + .block-container .water-left,
.temp-capacity-controls + .block-container .water-right,
.temp-capacity-controls + .block-container .water-top {
  transition: height 0.4s cubic-bezier(0.34, 1.56, 0.64, 1), transform 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
}

/* Caustics effect for 3D water */
.water-front::after,
.water-back::after,
.water-left::after,
.water-right::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: 
    radial-gradient(circle at 30% 40%, rgba(200, 255, 250, 0.4) 0%, rgba(200, 255, 250, 0) 30%),
    radial-gradient(circle at 70% 60%, rgba(200, 255, 250, 0.4) 0%, rgba(200, 255, 250, 0) 30%),
    radial-gradient(circle at 40% 80%, rgba(200, 255, 250, 0.4) 0%, rgba(200, 255, 250, 0) 30%),
    radial-gradient(circle at 60% 20%, rgba(200, 255, 250, 0.4) 0%, rgba(200, 255, 250, 0) 30%);
  animation: caustics 8s infinite ease-in-out;
  mix-blend-mode: screen;
  z-index: 1;
}

/* Water top surface special effects */
.water-top::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: 
    radial-gradient(circle at 30% 40%, rgba(255, 255, 255, 0.4) 0%, rgba(255, 255, 255, 0) 40%),
    radial-gradient(circle at 70% 60%, rgba(255, 255, 255, 0.4) 0%, rgba(255, 255, 255, 0) 40%);
  animation: water-surface-caustics 10s infinite ease-in-out;
  mix-blend-mode: screen;
}

@keyframes water-surface-caustics {
  0%, 100% {
    opacity: 0.6;
    transform: scale(1);
  }
  50% {
    opacity: 0.8;
    transform: scale(1.05);
  }
}

/* Water fill wobble animation */
@keyframes fillWobble {
  0% {
    transform: scaleY(0.97);
  }
  50% {
    transform: scaleY(1.03);
  }
  75% {
    transform: scaleY(0.99);
  }
  100% {
    transform: scaleY(1);
  }
}

/* Water depth fragment effect */
.water-depth-fragment {
  position: absolute;
  background: radial-gradient(
    circle at center,
    rgba(200, 255, 250, 0.6) 0%,
    rgba(200, 255, 250, 0) 70%
  );
  mix-blend-mode: overlay;
  pointer-events: none;
  border-radius: 50%;
  animation: depthFragmentMove 10s infinite ease-in-out;
  z-index: 3;
}

@keyframes depthFragmentMove {
  0%, 100% {
    transform: translate(0, 0) scale(1);
  }
  33% {
    transform: translate(5%, 2%) scale(1.1);
  }
  66% {
    transform: translate(-3%, -3%) scale(0.95);
  }
}

/* Water surface reflection */
.block-fill::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 30px;
  background: linear-gradient(
    to bottom,
    rgba(240, 255, 254, 0.8) 0%,
    rgba(200, 255, 250, 0.3) 60%,
    transparent 100%
  );
  filter: blur(2px);
  border-radius: 2px 2px 0 0;
  opacity: 0.9;
  z-index: 2;
}

/* Caustics effect */
.block-fill::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: 
    radial-gradient(circle at 30% 40%, rgba(200, 255, 250, 0.4) 0%, rgba(200, 255, 250, 0) 30%),
    radial-gradient(circle at 70% 60%, rgba(200, 255, 250, 0.4) 0%, rgba(200, 255, 250, 0) 30%),
    radial-gradient(circle at 40% 80%, rgba(200, 255, 250, 0.4) 0%, rgba(200, 255, 250, 0) 30%),
    radial-gradient(circle at 60% 20%, rgba(200, 255, 250, 0.4) 0%, rgba(200, 255, 250, 0) 30%),
    linear-gradient(to top, rgba(0, 120, 120, 0.4) 0%, transparent 40%);
  animation: caustics 8s infinite ease-in-out;
  mix-blend-mode: screen;
  z-index: 1;
}

@keyframes caustics {
  0%, 100% {
    opacity: 0.4;
    transform: scale(1) rotate(0deg);
  }
  25% {
    opacity: 0.6;
    transform: scale(1.05) rotate(1deg) translateX(2%);
  }
  50% {
    opacity: 0.5;
    transform: scale(0.98) rotate(0deg) translateX(0);
  }
  75% {
    opacity: 0.7;
    transform: scale(1.03) rotate(-1deg) translateX(-2%);
  }
}

/* Additional fill-up ripples */
.fill-ripple {
  position: absolute;
  width: 10px;
  height: 10px;
  background: rgba(220, 255, 252, 0.9);
  border-radius: 50%;
  animation: fillRipple 1.5s ease-out;
  animation-fill-mode: forwards;
  box-shadow: 
    0 0 8px rgba(220, 255, 252, 1),
    0 0 16px rgba(180, 255, 250, 0.6);
  filter: blur(0.5px);
  mix-blend-mode: screen;
  opacity: 0;
  z-index: 5;
}

@keyframes fillRipple {
  0% {
    transform: scale(0);
    opacity: 0;
  }
  20% {
    transform: scale(1);
    opacity: 0.9;
  }
  100% {
    transform: scale(4);
    opacity: 0;
  }
}

/* Temporarily changing the transition for testing */
.temp-capacity-controls + .block-container .block-fill {
  transition: height 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
}

/* Create more dynamic waves when block is pulsing */
.block.pulse .wave {
  animation-duration: 1.5s;
  animation-timing-function: ease-in-out;
}

.block.pulse .water-surface {
  animation: surface-pulse 1s ease-in-out;
}

@keyframes surface-pulse {
  0% {
    transform: scaleX(1);
    opacity: 0.8;
  }
  50% {
    transform: scaleX(1.05);
    opacity: 1;
  }
  100% {
    transform: scaleX(1);
    opacity: 0.8;
  }
}

/* Wave animation layers */
.wave-container {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  border-radius: 0 0 10px 10px;
  pointer-events: none;
  mix-blend-mode: soft-light;
}

.wave {
  position: absolute;
  width: 200%;
  height: 20px;
  background: linear-gradient(
    to bottom,
    rgba(240, 255, 254, 0.6) 0%,
    rgba(200, 255, 250, 0.2) 100%
  );
  border-radius: 50%;
  animation: sloshing 7s infinite ease-in-out;
  transform-origin: 50% 50%;
  left: -50%;
  backdrop-filter: blur(0.5px);
  filter: blur(1px);
}

.wave:nth-child(1) {
  bottom: -5px;
  animation-duration: 4s;
  opacity: 0.6;
  height: 15px;
}

.wave:nth-child(2) {
  bottom: 0;
  animation-duration: 7s;
  animation-delay: 0.5s;
  opacity: 0.4;
  height: 18px;
}

.wave:nth-child(3) {
  bottom: 5px;
  animation-duration: 5s;
  animation-delay: 1s;
  opacity: 0.5;
  height: 12px;
}

.water-surface {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 10px;
  background: linear-gradient(
    to bottom,
    rgba(240, 255, 254, 0.9) 0%,
    rgba(200, 255, 250, 0.2) 100%
  );
  border-radius: 2px 2px 0 0;
  transform: scaleX(1);
  filter: blur(1px);
  animation: surface-move 8s infinite ease-in-out;
}

@keyframes surface-move {
  0%, 100% { transform: scaleX(1); }
  50% { transform: scaleX(1.03); }
}

@keyframes sloshing {
  0% {
    transform: translate(0, 0) rotate(0deg);
  }
  25% {
    transform: translate(2%, 0) rotate(1deg);
  }
  50% {
    transform: translate(0, 0) rotate(0deg);
  }
  75% {
    transform: translate(-2%, 0) rotate(-1deg);
  }
  100% {
    transform: translate(0, 0) rotate(0deg);
  }
}

/* Enhanced ripple */
@keyframes ripple {
  0% {
    transform: scale(0);
    opacity: 0.9;
  }
  100% {
    transform: scale(3.5);
    opacity: 0;
  }
}

.ripple {
  position: absolute;
  width: 6px;
  height: 6px;
  background: rgba(240, 255, 254, 0.9);
  border-radius: 50%;
  animation: ripple 3s infinite ease-out;
  box-shadow: 
    0 0 8px rgba(240, 255, 254, 1),
    0 0 16px rgba(200, 255, 250, 0.8);
  filter: blur(0.5px);
  mix-blend-mode: screen;
}

.ripple::after {
  content: "";
  position: absolute;
  top: 30%;
  left: 30%;
  width: 30%;
  height: 30%;
  background: rgba(255, 255, 255, 1);
  border-radius: 50%;
  filter: blur(0.5px);
}

.ripple:nth-child(1) {
  left: 30%;
  top: 20%;
  animation-delay: 0s;
}

.ripple:nth-child(2) {
  left: 60%;
  top: 40%;
  animation-delay: 0.7s;
}

.ripple:nth-child(3) {
  left: 45%;
  top: 60%;
  animation-delay: 1.3s;
}

/* Change text color based on fill height */
.block-fill[style*="height: 50"] ~ .capacity-label,
.block-fill[style*="height: 6"] ~ .capacity-label,
.block-fill[style*="height: 7"] ~ .capacity-label,
.block-fill[style*="height: 8"] ~ .capacity-label,
.block-fill[style*="height: 9"] ~ .capacity-label {
  color: white;
  text-shadow: 0px 0px 2px rgba(0,0,0,0.5);
}

.capacity-text {
  margin-top: 25px;
  text-align: center;
  color: #555;
  font-size: 16px;
  font-family: 'Courier New', monospace;
  font-weight: 500;
}

.blob-size-label {
  position: absolute;
  bottom: 10px;
  right: 10px;
  font-family: 'Courier New', monospace;
  font-size: 14px;
  color: white;
  background-color: rgba(0, 0, 0, 0.5);
  padding: 5px 8px;
  border-radius: 4px;
  z-index: 2;
}

.blob-info-popup {
  position: absolute;
  top: 50%;
  /* Moved closer to the block (reduced from calc(100% + 2px)) */
  left: calc(80% + 0.5px); 
  /* Change this value to move left/right. 
     For left side positioning, use:
     right: calc(100% + 2px);
     left: auto;
  */
  transform: translateY(-50%);
  width: 280px;
  background-color: rgba(20, 20, 20, 0.9);
  border-radius: 8px;
  padding: 15px;
  color: #f8f8f8;
  font-family: 'Courier New', monospace;
  z-index: 20;
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3), 
              0 5px 10px rgba(0, 0, 0, 0.2),
              inset 0 1px 1px rgba(255, 255, 255, 0.1),
              inset 0 -1px 1px rgba(0, 0, 0, 0.3);
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.2s ease, visibility 0.2s ease, transform 0.2s ease;
  backdrop-filter: blur(5px);
  border: 1px solid rgba(100, 100, 100, 0.2);
}

/* To position the popup on the left side of the block, 
   uncomment these lines and comment out the default position above
*/
/*
.blob-info-popup {
  right: calc(100% + 2px);
  left: auto;
}

.blob-info-popup::before {
  left: auto;
  right: -10px;
  border-width: 10px 0 10px 10px;
  border-color: transparent transparent transparent rgba(20, 20, 20, 0.9);
}
*/

.block:hover + .blob-info-popup,
.blob-info-popup:hover {
  opacity: 1;
  visibility: visible;
  transform: translateY(-50%) translateX(0);
}

.blob-info-popup::before {
  content: '';
  position: absolute;
  top: 50%;
  left: -10px;
  transform: translateY(-50%);
  border-width: 10px 10px 10px 0;
  border-style: solid;
  border-color: transparent rgba(20, 20, 20, 0.9) transparent transparent;
  filter: drop-shadow(-3px 0px 2px rgba(0, 0, 0, 0.1));
}

.blob-info-header {
  font-size: 18px;
  color: #63f3ab;
  margin-bottom: 10px;
  border-bottom: 1px solid #444;
  padding-bottom: 5px;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
}

.blob-info-content {
  font-size: 14px;
}

.blob-info-item {
  margin-bottom: 10px;
  background-color: rgba(40, 40, 40, 0.5);
  border-radius: 4px;
  padding: 8px;
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.2);
}

.blob-info-item:last-child {
  margin-bottom: 0;
}

.blob-info-line {
  display: flex;
  justify-content: space-between;
  margin-bottom: 5px;
  line-height: 1.4;
}

.blob-info-key {
  color: #63c2f3;
  text-shadow: 0 1px 1px rgba(0, 0, 0, 0.3);
}

.blob-info-value {
  color: #f8f8f8;
  word-break: break-all;
  text-align: right;
  max-width: 65%;
}

.no-data-label {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-family: 'Courier New', monospace;
  font-size: 16px;
  color: #888;
  z-index: 2;
}

.loading, .error {
  font-family: 'Courier New', monospace;
  font-size: 18px;
  color: #888;
  padding: 20px;
  text-align: center;
}

.error {
  color: #e74c3c;
}

@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 rgba(43, 149, 214, 0.4);
  }
  70% {
    box-shadow: 0 0 0 20px rgba(43, 149, 214, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(43, 149, 214, 0);
  }
}

.pulse {
  animation: pulse 1s ease-out;
}

.block.pulse .wave {
  animation-duration: 2s;
}

/* Logo styling */
.logo-container {
  position: absolute;
  top: 20px;
  left: 20px;
  z-index: 10;
}

.avail-logo {
  width: 120px;
  height: auto;
}

/* Media query for smaller screens */
@media (max-width: 768px) {
  .block-container {
    flex-direction: column;
  }
  
  .blob-info-popup {
    position: absolute;
    top: calc(100% + 2px);
    left: 50%;
    transform: translateX(-50%);
  }
  
  .blob-info-popup::before {
    top: -10px;
    left: 50%;
    transform: translateX(-50%);
    border-width: 0 10px 10px 10px;
    border-color: transparent transparent rgba(20, 20, 20, 0.9) transparent;
  }
  
  .block:hover + .blob-info-popup,
  .blob-info-popup:hover {
    transform: translateX(-50%) translateY(0);
  }
}

/* Temporary capacity controls - to be removed later */
.temp-capacity-controls {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-top: 15px;
  padding: 10px;
  background-color: rgba(255, 220, 220, 0.2);
  border: 1px dashed #ff9999;
  border-radius: 8px;
}

.temp-capacity-label {
  display: flex;
  align-items: center;
  gap: 8px;
  margin-bottom: 10px;
  font-family: 'Courier New', monospace;
  font-size: 14px;
  color: #333;
  cursor: pointer;
}

.temp-capacity-label input {
  cursor: pointer;
}

.temp-capacity-slider-container {
  display: flex;
  align-items: center;
  gap: 10px;
  width: 100%;
  padding: 5px 0;
}

.temp-capacity-slider {
  flex: 1;
  height: 6px;
  appearance: none;
  background: linear-gradient(to right, #40F0E6, #00A0A0);
  border-radius: 3px;
  outline: none;
  cursor: pointer;
}

.temp-capacity-slider::-webkit-slider-thumb {
  appearance: none;
  width: 18px;
  height: 18px;
  background: #00A0A0;
  border-radius: 50%;
  border: 2px solid white;
  box-shadow: 0 1px 3px rgba(0,0,0,0.3);
  cursor: pointer;
  transition: all 0.2s;
}

.temp-capacity-slider::-webkit-slider-thumb:hover {
  background: #40F0E6;
  transform: scale(1.1);
}

.temp-capacity-value {
  font-family: 'Courier New', monospace;
  font-size: 14px;
  font-weight: bold;
  color: #008080;
  min-width: 40px;
  text-align: right;
}

/* Button container */
.temp-buttons-container {
  display: flex;
  gap: 10px;
  width: 100%;
  justify-content: center;
}

.temp-pulse-button,
.temp-fill-button {
  margin-top: 10px;
  padding: 6px 15px;
  background: linear-gradient(to right, #40F0E6, #00A0A0);
  color: white;
  border: none;
  border-radius: 4px;
  font-family: 'Courier New', monospace;
  font-size: 14px;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.2s;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.temp-pulse-button:hover,
.temp-fill-button:hover {
  background: linear-gradient(to right, #60F5EB, #00BBBB);
  transform: translateY(-1px);
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.15);
}

.temp-pulse-button:active,
.temp-fill-button:active {
  transform: translateY(1px);
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
}

.temp-fill-button {
  background: linear-gradient(to right, #20D8D0, #008585);
}

.temp-fill-button:hover {
  background: linear-gradient(to right, #40E8E0, #009999);
}

/* Add a badge to indicate this is a temporary feature */
.temp-capacity-controls::before {
  content: "TESTING ONLY";
  position: absolute;
  top: -10px;
  right: -10px;
  background: #ff9999;
  color: white;
  font-size: 10px;
  padding: 2px 6px;
  border-radius: 10px;
  font-weight: bold;
  box-shadow: 0 1px 3px rgba(0,0,0,0.2);
}

/* Block shine effect - REMOVED */
/*
.block::before {
  content: "";
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: linear-gradient(
    to bottom right,
    rgba(255, 255, 255, 0) 0%,
    rgba(255, 255, 255, 0) 40%,
    rgba(255, 255, 255, 0.3) 50%,
    rgba(255, 255, 255, 0) 60%,
    rgba(255, 255, 255, 0) 100%
  );
  transform: rotate(30deg);
  pointer-events: none;
  animation: shine 10s infinite linear;
}

@keyframes shine {
  0% {
    transform: rotate(0deg) translateY(0%);
  }
  25% {
    transform: rotate(5deg) translateY(-5%);
  }
  50% {
    transform: rotate(0deg) translateY(0%);
  }
  75% {
    transform: rotate(-5deg) translateY(5%);
  }
  100% {
    transform: rotate(0deg) translateY(0%);
  }
}
*/
